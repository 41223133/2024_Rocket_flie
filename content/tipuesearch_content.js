var tipuesearch = {"pages": [{'title': '關於', 'text': '\n 國立虎尾科技大學機械設計工程系 \n National Formosa University \n Department of Mechanical Design Engineering \n 41223133 陳士弘 火箭設計與學習網站 \n Rocket designing and learning site \n \n 介紹: \n 這裡是我自己利用國立虎尾科技大學機械設計工程系的嚴家銘老師製作出來的程式以及網站使用github的fork轉移過來的網站，我有次突然想到，如果我自己利用嚴老師所設計出來的網站來自己打造一個火箭學習歷程的網站來編輯，那我自己就可以趁機利用自己所學來打造出一個屬於我自己的火箭學習網站了。 \n 至於為什麼要使用這個網站呢? \n 因為我今年2024年準備要參加台灣盃的火箭競賽，所以我在明年2025年的7、8月之前會密集的學習有關火箭的一切知識。再加上上面我所提到的動機，造就了這個網站的誕生。 \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0編輯時間:2024/12/15\xa0 \xa0AM 12:19 \n \n', 'tags': '', 'url': '關於.html'}, {'title': 'Open Rocket', 'text': '這個影片是我第一次使用Open Rocket軟體的影片: \n \n \n 當初參加學校火箭團隊的時候我完全沒有聽過什麼是OpenRocket這個軟體，還是頭第一次聽到。 \n 後來一個學長介紹這個軟體給我，讓我初步了解這個軟體大概是在做些什麼事情。 我去網路上查詢後，我發現OpenRocket是一個開源軟體，任何人都可以免費使用它。 \n 什麼是OpenRocket呢? 火箭設計者和愛好者開發的免費、開源的模擬軟體，可以用來做很多關於火箭的事情，以下是我詢問ChatGPT有關於OpenRocket的對話內容。 \n \n \n \n 我 :\xa0 告訴我Open Rocket是什麼軟體?我們設計火箭的時候會需要用到它嗎?為什麼?理由有哪些? 假如我們不使用它，那我還可以用什麼方式學習火箭設計? \n \n C :\xa0 \n OpenRocket 是一款專為火箭設計和模擬而開發的開源軟體。它能夠幫助設計者模擬火箭的飛行過程，包括發射、上升、頂點、下降及著陸等階段，並且支持不同的火箭設計參數調整。以下是它在火箭設計中可能的用途與優勢： \n 使用 OpenRocket 的理由： \n \n 模擬能力 ：OpenRocket 能精準模擬火箭的飛行軌跡，包含空氣動力學的影響，特別是空氣阻力和重力作用下的運動。 \n 設計測試 ：可以模擬火箭不同的設計參數，例如長度、直徑、燃料類型和噴嘴設計，幫助快速測試設計想法的可行性。 \n 成本效率 ：相比真實測試，模擬成本低廉，可以避免浪費材料和時間。 \n 學習工具 ：OpenRocket 是火箭設計初學者的入門工具，適合熟悉基礎設計和模擬。 \n \n 如果不使用 OpenRocket，學習火箭設計的替代方法： \n \n \n 其他模擬軟體 ： \n \n Ansys Fluent ：專注於流體力學和熱分析，適合研究噴嘴設計及熱傳導問題。 \n OpenFOAM ：開源的計算流體力學工具，能對燃燒室或噴嘴進行詳細模擬。 \n SolidWorks \xa0 或 \xa0 Autodesk Fusion 360 ：設計火箭的3D建模，結合力學分析功能。 \n \n \n \n 實體建模和小型測試 ： \n \n 建造比例縮小的火箭模型，用以測試基本設計概念。 \n 探索燃料種類（例如火箭糖或固體燃料），並進行小規模燃燒測試。 \n \n \n \n 學習資源 ： \n \n 在線課程（例如 Coursera 或 Udemy 的火箭工程課程）。 \n 參考書籍，例如《Rocket Propulsion Elements》。 \n 實驗室實習：尋找能進行火箭測試的實驗室進行動手學習。 \n \n \n \n 參加相關團隊或競賽 ： \n \n 加入學校或社區的火箭設計團隊，學習火箭設計的實際流程。 \n 參加火箭設計競賽，例如 Spaceport America Cup，實踐並與他人合作。 \n \n \n \n 在火箭設計中，模擬軟體是極具價值的工具。若未使用 OpenRocket，其他模擬軟體或手工建模和測試方式，則是進一步深入學習和實踐的替代方案。你可以根據資源和需求選擇最適合的方式。 \n \n 我 :\xa0 那Open Rocket可以幫助我做哪些事情?有什麼理由說它有比其他軟體還要更好的地方?我為甚麼要使用它? \n \n C :\xa0 \n OpenRocket 是一款專為火箭設計者和愛好者開發的免費、開源的模擬軟體。以下是它的功能和與其他軟體相比的優勢，這些理由說明為什麼使用 OpenRocket 是一個好選擇： \n \n OpenRocket 能幫助你做的事情： \n \n \n 設計火箭模型 ： \n \n 幫助繪製火箭的外觀和結構，從機體、尾翼到噴嘴等部件。 \n 支援不同材料和燃料的配置。 \n \n \n \n 飛行模擬 ： \n \n 提供詳細的飛行軌跡模擬，包括高度、速度、加速度、角度、穩定性等。 \n 模擬天氣條件（風速、空氣密度）對火箭飛行的影響。 \n \n \n \n 穩定性分析 ： \n \n 計算火箭的穩定性，通過分析重心（CG）和壓力中心（CP）的相對位置，確保設計穩定且可飛行。 \n \n \n \n 多次測試與優化 ： \n \n 快速調整參數進行多次模擬，優化火箭設計。 \n 減少實驗次數，節省時間和資金。 \n \n \n \n 支援多級火箭 ： \n \n 能模擬多級火箭的飛行過程，包括分離機制和每級燃燒結束後的效應。 \n \n \n \n 專業報告生成 ： \n \n 生成完整的數據報告，包含飛行數據、軌跡圖和設計細節，方便用於團隊討論或學術用途。 \n \n \n \n \n OpenRocket 的優勢： \n \n \n 免費且開源 ： \n \n 與需要昂貴授權的商業軟體（如 Ansys 或 RockSim）相比，OpenRocket 是免費的，適合學術和個人使用者。 \n \n \n \n 易於上手 ： \n \n 提供直觀的用戶界面，適合初學者快速掌握。 \n 不需要專業背景即可設計和模擬火箭。 \n \n \n \n 功能豐富 ： \n \n 支持從設計到模擬的完整流程。 \n 包含穩定性檢查、自動模擬報告等功能，對火箭設計的核心需求都有涵蓋。 \n \n \n \n 活躍的用戶社群 ： \n \n 擁有大量使用者和資源，可以從社群中獲得幫助和分享的案例。 \n \n \n \n 輕量化 ： \n \n 無需高性能電腦即可運行，適合一般使用者和學生。 \n \n \n \n \n 為什麼選擇使用 OpenRocket： \n \n \n 快速原型設計與測試 ： \n \n 可以快速驗證你的火箭設計是否可行，為後續的實體測試奠定基礎。 \n \n \n \n 降低成本與風險 ： \n \n 在模擬中發現設計問題，避免實體測試階段出現重大錯誤，節省資金和材料。 \n \n \n \n 學習與教育 ： \n \n 是學習火箭設計和飛行力學的理想工具，幫助理解基礎理論和實際應用。 \n \n \n \n 與其他工具兼容 ： \n \n 可搭配 3D 設計軟體（如 SolidWorks）和其他分析工具（如 Ansys）進一步提高設計精度。 \n \n \n \n 適合初學者與進階用戶 ： \n \n 初學者能利用簡單功能快速上手，進階用戶則可通過更多參數細調，進行深入的模擬和優化。 \n \n \n \n \n 何時該選擇其他軟體？ \n 如果你的設計需求超越了 OpenRocket 的功能範圍，比如高精度的熱分析（需要使用 Ansys Fluent）或更複雜的流體模擬（需要 OpenFOAM），這些專業軟體可能更適合。 \n 總結來說， OpenRocket \xa0 是一個性價比極高的火箭設計工具，特別適合火箭設計的初期階段、教育用途以及資源有限的團隊。選擇它能讓你快速入門火箭設計並進行有效模擬，是值得考慮的選項。 \n \n \n \n 以上是我跟ChatGPT的對話內容，這也讓我了解為什麼我會需要使用這個軟體來開發火箭設計，對我而言實在是很重要，也具有一定的價值。 \n', 'tags': '', 'url': 'Open Rocket.html'}, {'title': '工程數學結合火箭關係', 'text': '時間:2024/12/15 PM 02:20 \n 今天我使用ChatGPT來學習工程數學，我想要在學習工程數學的時候也可以結合火箭領域一起學習。 以下是我跟ChatGPT之間的對話，我請ChatGPT用輕鬆的遊戲式學習情境來帶入我學習數學，這樣學習又增添了一點樂趣: \n \n \n \n \n 我 : 我們就用拉普拉斯轉換作為例子，你設計一個小遊戲展示一下你的遊戲會如何運作。 因為我現階段學校正在學習拉普拉斯轉換(工程數學)，所以我想看看你會怎麼設計一個關於工程數學的小遊戲，讓我學習工程數學不會感到無聊。 \n \n C :\xa0 \n 好啊！我們來設計一個圍繞 拉普拉斯轉換 的小遊戲，讓你在探索中學習，而不是被公式壓得喘不過氣。以下是我的構想： \n \n 遊戲名稱：時頻旅人 \n 你是一名時間領域與頻率領域的旅人，穿越不同世界來解決動態系統的問題。你需要使用拉普拉斯轉換將時間域的問題轉換到頻率域，幫助角色們解決實際工程中的挑戰。 \n \n 遊戲設定 \n \n \n 主角背景： 玩家是拉普拉斯之書的持有者，能夠在時間與頻率世界之間自由切換。 目標是利用轉換技巧幫助不同的NPC解決問題。 \n \n \n 主要工具： \n \n 拉普拉斯轉換公式 \n 常用的轉換表（例如，常見函數的轉換） \n 反拉普拉斯轉換技巧 \n \n \n \n 場景： \n \n 時域世界： \xa0 時間函數表示的問題，例如振盪、衰減、脈衝等。 \n 頻域世界： \xa0 複變平面上的代數問題，用於求解特徵頻率和系統響應。 \n \n \n \n \n 遊戲流程 \n 第一關：修復失控的振盪系統 \n \n \n 背景： 一座機械城的振盪系統出現問題，時域響應 \xa0 f ( t ) = e − 2 t sin \u2061 ( 3 t ) u ( t ) 持續震動。需要你將它轉換到頻率域來分析原因，並找到特徵頻率，修復系統。 \n \n \n 挑戰： \n \n 利用拉普拉斯轉換公式 \xa0 L { f ( t ) } = F ( s ) ，計算 \xa0 f ( t ) 的頻域表示： F ( s ) = 3 ( s + 2 ) 2 + 9 \n 解析 \xa0 F ( s ) 找到極點，確認穩定性。 \n \n \n \n 操作方式： 玩家需要選擇對應的轉換公式，並拖放到方程上，系統會自動檢查答案。如果正確，城鎮振盪系統恢復穩定，進入下一關。 \n 註解:這邊我只有進行第一關而已，沒有接著第二關。 \n \n \n \n 遊戲特色 \n \n \n 即時反饋： 提供圖形化展示，讓玩家看到從時域到頻域的轉換過程，並透過波形和極點分布視覺化結果。 \n \n \n 學習與挑戰結合： 每關設有小提示，比如公式選擇、轉換表查閱，幫助玩家學習新概念。 \n \n \n 成就系統： 完成挑戰後，解鎖拉普拉斯轉換的進階應用，比如濾波器設計、控制理論等，讓學習與實戰結合。 \n \n \n \n 你覺得這樣的遊戲模式有趣嗎？如果有特別喜歡的關卡或想補充更多細節，我們可以進一步深化！ \n \n \n C :\xa0 \n 針對這一關的操作步驟與教學 \n 在這一關中，你需要將振盪系統的時域響應 \xa0 f ( t ) = e − 2 t sin \u2061 ( 3 t ) u ( t ) 轉換到頻域來分析系統的穩定性。以下是具體的操作步驟與學習重點： \n \n 1. 選擇對應的拉普拉斯轉換公式 \n 根據拉普拉斯轉換表，我們知道： \n L { e a t sin \u2061 ( ω t ) u ( t ) } = ω ( s − a ) 2 + ω 2 \n 對應於 \xa0 f ( t ) = e − 2 t sin \u2061 ( 3 t ) u ( t ) ，這裡的 \xa0 a = − 2 ， ω = 3 ，直接代入公式即可。 \n \n 2. 計算拉普拉斯轉換 \n 將公式代入，我們得到頻域函數： \n F ( s ) = 3 ( s + 2 ) 2 + 9 \n \n 3. 解析頻域函數 \xa0 F ( s ) \n (a) 找到系統的極點 \n \n 極點來自於分母，即 \xa0 ( s + 2 ) 2 + 9 = 0 。 \n 解出 \xa0 s s ： ( s + 2 ) 2 = − 9 \u2005\u200a ⟹ \u2005\u200a s + 2 = ± 3 i \u2005\u200a ⟹ \u2005\u200a s = − 2 ± 3 i \n \n 極點是 \xa0 − 2 + 3 i \xa0 和 \xa0 − 2 − 3 i 。 \n \n (b) 確認穩定性 \n 穩定性取決於極點的實部： \n \n 若所有極點的實部都小於零，系統穩定。 \n 在這裡，實部為 \xa0 − 2 ，因此系統穩定。 \n \n \n 4. 遊戲內操作方式 \n \n \n 第一步：選擇轉換公式 \n \n 點擊轉換公式 \xa0 L { e a t sin \u2061 ( ω t ) } = ω ( s − a ) 2 + ω 2 。 \n 將公式拖放到 \xa0 f ( t ) = e − 2 t sin \u2061 ( 3 t ) f ( t ) = e −2 t sin ( 3 t ) \xa0 上，系統自動生成 \xa0 F ( s ) = 3 ( s + 2 ) 2 + 9 。 \n \n \n \n 第二步：解析極點 \n \n 使用工具「極點計算器」計算分母為零的位置：輸入 \xa0 ( s + 2 ) 2 + 9 = 0 ，計算出極點 \xa0 − 2 ± 3 i 。 \n 系統提示：極點位於左半平面，穩定性確認無誤。 \n \n \n \n 第三步：穩定性報告 \n \n 確認系統穩定，提交報告：「系統穩定，實部均小於零。」 \n 完成後觸發機械城振盪穩定動畫，解鎖下一關。 \n \n \n \n \n 學習重點與小提示 \n \n \n 頻域極點與穩定性關係： \n \n 左半平面極點（實部小於 0）：系統穩定。 \n 右半平面極點（實部大於 0）：系統不穩定。 \n \n \n \n 視覺化幫助理解： \n \n 遊戲可以以動畫形式展示 \xa0 f ( t ) \xa0 的振盪波形（時域）如何隨時間穩定下來，以及頻域的極點分佈如何對應系統行為。 \n \n \n \n 練習拉普拉斯公式應用： \n \n 每個步驟都強調公式的選擇與應用，幫助熟悉拉普拉斯轉換。 \n \n \n \n \n', 'tags': '', 'url': '工程數學結合火箭關係.html'}, {'title': '工程數學為什麼需要用到虛數', 'text': '\n 我 :\xa0 為什麼有虛數i?那個i是什麼意思? \n \n C :\xa0 \n 虛數 \xa0 i \xa0 的出現是因為我們在計算分母 \xa0 ( s + 2 ) 2 + 9 = 0 \xa0 的根時，會出現負數的平方根。這就是虛數的由來。讓我來詳細解釋虛數 \xa0 i \xa0 是什麼，以及它在這裡的意義。 \n \n 虛數 \xa0 i\xa0 \xa0的定義 \n 虛數 \xa0 i \xa0 是數學中的一個概念，定義為： \n i = − 1 \n 它是一個數學抽象，用來處理負數的平方根，因為在實數範圍內，負數是沒有平方根的。 \n \n 在這裡，為什麼會出現\xa0 i ? \n 我們在求解分母 \xa0 ( s + 2 ) 2 + 9 = 0 時： \n ( s + 2 ) 2 = − 9 \n 取平方根時，需要處理 \xa0 − 9\xa0\xa0 這可以寫成： \n − 9 = 9 ⋅ − 1 = 3 i \n 因此，解出來的 \xa0 s \xa0 是： \n s = − 2 ± 3 i \n \n 虛數 \xa0 i \xa0 的意義 \n 虛數 \xa0 i \xa0 並不是「不真實」的數字，而是數學中一個拓展的數系，叫做 複數 ，用來表示更廣泛的數學現象。在工程和科學應用中，虛數和複數具有非常重要的物理意義，特別是在處理振盪和波動時。 \n 複數的形式是： \n z = a + b i \n 其中: \n \n a \xa0 是實部，代表系統的穩定性（例如 \xa0 s = − 2 \xa0 的實部表示系統衰減速度）。 \n b i\xa0 \xa0是虛部，與頻率相關（例如 \xa0 3 i 表示振盪的頻率是 \xa0 3\xa0 單位/秒）。 \n \n \n 在拉普拉斯轉換中的角色 \n 虛數 \xa0 i \xa0 和複數在拉普拉斯轉換中有重要的應用，特別是在系統分析中： \n \n \n 極點的虛部與系統振盪有關： \n \n ± 3 i \xa0 表示系統有頻率為3的振盪分量。 \n 虛部越大，振盪的頻率越高。 \n \n \n \n 實部與系統穩定性有關： \n \n 實部 \xa0 − 2 表示振盪會逐漸衰減（穩定系統）。 \n 如果實部是正的（例如 \xa0 + 2 ），則系統不穩定，振盪會隨時間增強。 \n \n \n \n \n 實際應用的解釋 \n 在你的例子 \xa0 f ( t ) = e − 2 t sin \u2061 ( 3 t ) f ( t ) \xa0 中，函數的振盪部分 \xa0 sin \u2061 ( 3 t ) \xa0 對應於虛部 \xa0 3 i ，而指數衰減部分 \xa0 e − 2 t \xa0 對應於實部 \xa0 − 2 。這兩部分結合起來，描述了一個衰減的振盪現象，對應於一個穩定的動態系統。 \n \n 視覺化幫助理解 \n \n \n 時間域： f ( t ) = e − 2 t sin \u2061 ( 3 t ) 的圖像是個振盪波，但振幅隨著時間指數衰減。 \n \n \n 頻率域： 在拉普拉斯域中，極點 \xa0 − 2 ± 3 i \xa0 的虛部 \xa0 ± 3 i 代表振盪頻率，實部 \xa0 − 2 代表振幅的衰減。 \n \n \n \n \n', 'tags': '', 'url': '工程數學為什麼需要用到虛數.html'}, {'title': '視覺化分析', 'text': '我請ChatGPT利用python程式使用數學、圖形分析的方式來告訴我如果在火箭設計上是不是也可以使用工程數學的方式來設計出火箭。此概念也可以用在火箭設計系統分析穩定，並使用圖形的方式來了解系統模擬是否穩定。 \n \n \n \n import numpy as np\nimport matplotlib.pyplot as plt\n\n# 定義時間範圍\ntime = np.linspace(0, 5, 1000)\n\n# 定義時間域響應 f(t) = e^(-2t) * sin(3t)\na = -2  # 衰減係數\nomega = 3  # 振盪頻率\nf_t = np.exp(a * time) * np.sin(omega * time)\n\n# 繪製時間域圖像\nplt.figure(figsize=(10, 6))\nplt.plot(time, f_t, label=r"$f(t) = e^{-2t}\\sin(3t)$")\nplt.axhline(0, color=\'gray\', linestyle=\'--\', linewidth=0.8)\nplt.title("Time-Domain Response of the System", fontsize=14)\nplt.xlabel("Time (s)", fontsize=12)\nplt.ylabel("Amplitude", fontsize=12)\nplt.grid(alpha=0.3)\nplt.legend(fontsize=12)\nplt.show()\n\n# 繪製極點圖（複平面）\nplt.figure(figsize=(6, 6))\nplt.axhline(0, color=\'gray\', linestyle=\'--\', linewidth=0.8)\nplt.axvline(0, color=\'gray\', linestyle=\'--\', linewidth=0.8)\nplt.scatter([-2], [3], color=\'red\', label="Pole: -2 + 3i", s=100)\nplt.scatter([-2], [-3], color=\'blue\', label="Pole: -2 - 3i", s=100)\nplt.title("Pole-Zero Plot in the Complex Plane", fontsize=14)\nplt.xlabel("Re(s)", fontsize=12)\nplt.ylabel("Im(s)", fontsize=12)\nplt.grid(alpha=0.3)\nplt.legend(fontsize=12)\nplt.show()\n \n \n \n \n \n \n 以上是視覺化的結果： \n \n \n 時間域響應圖： \n \n 你可以看到 \xa0 f ( t ) = e − 2 t sin \u2061 ( 3 t ) 在時間上是一個振盪衰減的波形。 \n 隨著時間推進，振幅指數式減小，這表明系統是穩定的。 \n \n \n \n 極點圖（複平面）： \n \n 極點位於 \xa0 − 2 ± 3 i ，橫坐標（實部）為 \xa0 − 2 ，表示衰減速度；縱坐標（虛部）為 \xa0 ± 3 ，表示振盪頻率。 \n 極點位於複平面的左半平面，這說明系統是穩定的（振幅逐漸減少）。 \n \n \n \n \n 火箭發射系統穩定性分析 \n 這些概念確實可以應用在火箭發射系統的穩定性分析中。例如： \n \n \n 姿態控制系統（Attitude Control System）： \n \n 火箭在飛行過程中需要控制俯仰、偏航和滾轉角度，這些都是動態系統。 \n 透過分析系統的拉普拉斯極點，可以確定控制系統是否穩定，是否會發生無限振盪或震盪衰減。 \n \n \n \n 推力控制（Thrust Control）： \n \n 當火箭的推力系統有延遲或振盪時，可以用類似的分析方法來優化控制器設計，使系統更穩定。 \n \n \n \n 振動分析： \n \n 火箭結構在推力作用下會產生彈性振動，這些振動也可以用複數極點來描述和分析，確保振動不會導致結構失效。 \n \n \n \n \n \n', 'tags': '', 'url': '視覺化分析.html'}, {'title': '結合Github連動網站', 'text': '這個網站是我透過在系上的嚴家銘老師教我們的Github程式平台還有使用方式，以及如何維護一個網站來進行操作。 \n 以下是我操作過程的影片: \n \n \n 這在我 關於 的介紹有提到，為什麼我會使用這樣子的方式來記錄我的學習歷程，因為對我自己而言是擁有一定的價值存在。', 'tags': '', 'url': '結合Github連動網站.html'}]};